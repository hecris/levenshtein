{"version":3,"sources":["lev.js","PathInspector.js","CellInspector.js","Matrix.js","App.js","serviceWorker.js","index.js"],"names":["lev","S","T","n","length","m","dp","Array","i","j","Math","min","lev_helper","PlaybackIterator","this","hasNext","action","mymin","PathInspector","props","state","pbi","finished","actions","rS","clickNext","bind","next","pretty_action","slice","setState","push","style","color","shift","finish","disabled","onClick","React","Component","CellInspector","val","examinePath","pathInspector","createRef","current","updateIterator","ref","Cell","x","y","cellClick","cursor","backgroundColor","value","Matrix","cells","refs","cellInspector","buildCellsAndRefs","row","res","setColor","resetCellColors","cellClickHelper","updateCell","prevProps","className","width","height","map","Home","input1","input2","handleClick","type","placeholder","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6RAEO,SAASA,EAAIC,EAAGC,GAInB,IAHA,IAAIC,EAAIF,EAAEG,OACNC,EAAIH,EAAEE,OACNE,EAAK,IAAIC,MAAMJ,EAAE,GACZK,EAAI,EAAGA,GAAKL,IAAKK,EACtBF,EAAGE,GAAK,IAAID,MAAMF,EAAE,GAGxB,OAIJ,SAAoBJ,EAAGC,EAAGC,EAAGE,EAAGC,GAC5B,IAAK,IAAIE,EAAI,EAAGA,GAAKL,IAAKK,EACtBF,EAAGE,GAAG,GAAKA,EAGf,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,IAAKI,EACtBH,EAAG,GAAGG,GAAKA,EAGf,IAAK,IAAID,EAAI,EAAGA,GAAKL,IAAKK,EACtB,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,IAAKI,EAClBR,EAAEO,EAAE,KAAON,EAAEO,EAAE,GACfH,EAAGE,GAAGC,GAAKH,EAAGE,EAAE,GAAGC,EAAE,GAGrBH,EAAGE,GAAGC,GAAK,EAAIC,KAAKC,IACZL,EAAGE,EAAE,GAAGC,EAAE,GACVH,EAAGE,EAAE,GAAGC,GACRH,EAAGE,GAAGC,EAAE,IAvB5BG,CAAWX,EAAGC,EAAGC,EAAGE,EAAGC,GAChBA,EA6BJ,IAAMO,EAAb,WACI,WAAYZ,EAAGC,EAAGI,EAAIE,EAAGC,GAAI,oBACzBK,KAAKb,EAAIA,EACTa,KAAKZ,EAAIA,EACTY,KAAKR,GAAKA,EACVQ,KAAKN,EAAIA,EACTM,KAAKL,EAAIA,EACTK,KAAKC,SAAU,EAPvB,mDAWQ,IAOIC,EAPAR,EAAIM,KAAKN,EAAGC,EAAIK,KAAKL,EAAGH,EAAKQ,KAAKR,GAEtC,IAAKQ,KAAKC,SAAkB,IAANP,GAAiB,IAANC,EAE7B,OADAK,KAAKC,SAAU,EACR,MAIX,IAAIE,EAAQ,kBAAMP,KAAKC,IAAIL,EAAGE,EAAE,GAAGC,EAAE,GAAIH,EAAGE,EAAE,GAAGC,GAAIH,EAAGE,GAAGC,EAAE,KAuB7D,OArBIK,KAAKb,EAAEO,EAAE,KAAOM,KAAKZ,EAAEO,EAAE,MACvBD,IACAC,EACFO,EAAS,OAGE,IAANR,GAAWS,MAAYX,EAAGE,GAAGC,EAAE,MAClCA,EACFO,EAAS,OAEE,IAANP,GAAWQ,MAAYX,EAAGE,EAAE,GAAGC,MAClCD,EACFQ,EAAS,UAGPR,IACAC,EACFO,EAAS,OAEbF,KAAKN,EAAIA,EACTM,KAAKL,EAAIA,EACFO,MA1Cf,KC2CeE,E,kDA9EX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTZ,GAAI,EACJC,GAAI,EACJY,KAAM,EACNC,UAAU,EACVC,QAAS,GACTC,GAAI,IAER,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBAVF,E,wDAcf,IACIV,EADMF,KAAKM,MAAMC,IACJM,OACbH,EAAKV,KAAKM,MAAMI,GAEhBhB,EAAIM,KAAKM,MAAMZ,EAAGC,EAAIK,KAAKM,MAAMX,EACjCP,EAAIY,KAAKK,MAAMjB,EACf0B,EAAgB,GACL,QAAXZ,GACAQ,EAAKA,EAAGK,MAAM,EAAGrB,GAAKN,EAAEO,EAAE,GAAKe,EAAGK,MAAMrB,GACxCM,KAAKgB,SAAS,CAACrB,EAAGA,EAAE,IACpBmB,EAAgB,WAAa1B,EAAEO,EAAE,GAAK,MAEtB,QAAXO,GACLY,EAAgB,WAAaJ,EAAGhB,EAAE,GAAK,KACvCgB,EAAKA,EAAGK,MAAM,EAAGrB,EAAE,GAAKgB,EAAGK,MAAMrB,GACjCM,KAAKgB,SAAS,CAACtB,EAAGA,EAAE,KAEJ,QAAXQ,GACLY,EAAgB,eAAiBJ,EAAGhB,EAAE,GAAK,UAAYN,EAAEO,EAAE,GAAK,KAChEe,EAAKA,EAAGK,MAAM,EAAGrB,EAAE,GAAKN,EAAEO,EAAE,GAAKe,EAAGK,MAAMrB,GAC1CM,KAAKgB,SAAS,CAACtB,EAAGA,EAAE,IACpBM,KAAKgB,SAAS,CAACrB,EAAGA,EAAE,KAEJ,QAAXO,GACLY,EAAgB,oBAChBd,KAAKgB,SAAS,CAACtB,EAAGA,EAAE,IACpBM,KAAKgB,SAAS,CAACrB,EAAGA,EAAE,MAGpBmB,EAAgB,YAChBd,KAAKgB,SAAS,CAACR,UAAU,KAE7BR,KAAKgB,SAAS,CAACN,GAAIA,IACnBV,KAAKM,MAAMG,QAAQQ,KAAK,4BAAKH,EAAL,WAA2B,2BAAOI,MAAO,CAACC,MAAO,SAAUT,KAClD,GAA7BV,KAAKM,MAAMG,QAAQnB,QAAaU,KAAKM,MAAMG,QAAQW,U,qCAG5C1B,EAAGC,GACd,IAAIR,EAAIa,KAAKK,MAAMlB,EAAGC,EAAIY,KAAKK,MAAMjB,EAAGI,EAAKQ,KAAKK,MAAMb,GACpDkB,EAAKvB,EAAE4B,MAAM,EAAGrB,GACpBM,KAAKgB,SAAS,CAACtB,EAAGA,EAAGC,EAAGA,EAAGY,IAAK,IAAIR,EAAiBZ,EAAGC,EAAGI,EAAIE,EAAGC,KAClEK,KAAKgB,SAAS,CAACN,GAAIA,IACnBV,KAAKgB,SAAS,CAACP,QACP,CAAC,yCAAc,2BAAOS,MAAO,CAACC,MAAO,SAAUT,KAC/CW,QAAQ,M,+BAKhB,IAAuB,GAAnBrB,KAAKM,MAAMC,IAAW,MAAO,GACzBP,KAAKM,MAAMZ,EACXM,KAAKM,MAAMX,EAEnB,OACQ,6BACI,4BAAQ2B,SAAUtB,KAAKM,MAAME,SAAUe,QAASvB,KAAKW,WAArD,QACA,4BACKX,KAAKM,MAAMG,c,GAxERe,IAAMC,WCmDnBC,E,kDAlDX,WAAYrB,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTZ,GAAI,EACJC,GAAI,EACJgC,KAAM,GAEV,EAAKC,YAAc,EAAKA,YAAYhB,KAAjB,gBACnB,EAAKiB,cAAgBL,IAAMM,YARZ,E,uDAWRpC,EAAGC,EAAGgC,GACb3B,KAAKgB,SAAS,CAACtB,EAAGA,IAClBM,KAAKgB,SAAS,CAACrB,EAAGA,IAClBK,KAAKgB,SAAS,CAACW,IAAKA,M,oCAIpB3B,KAAK6B,cAAcE,QAAQC,eAAehC,KAAKM,MAAMZ,EAAGM,KAAKM,MAAMX,K,+BAInE,IAAID,EAAIM,KAAKM,MAAMZ,EAAGC,EAAIK,KAAKM,MAAMX,EAAGgC,EAAM3B,KAAKM,MAAMqB,IACzD,OAAW,IAAPjC,EAAiB,GAEb,sEAGI,2BAAOwB,MAAO,CAACC,MAAO,SAAtB,IAAsCnB,KAAKK,MAAMlB,EAAE4B,MAAM,EAAErB,GAA3D,KAHJ,gBAOI,2BAAOwB,MAAO,CAACC,MAAO,SAAtB,IAAsCnB,KAAKK,MAAMjB,EAAE2B,MAAM,EAAEpB,GAA3D,KAPJ,eAWI,2BAAOuB,MAAO,CAACC,MAAO,QAASQ,GAXnC,OAaI,6BACI,4BAAQJ,QAASvB,KAAK4B,aAAtB,mBAEJ,kBAAC,EAAD,CAAepC,GAAIQ,KAAKK,MAAMb,GACfL,EAAGa,KAAKK,MAAMlB,EACdC,EAAGY,KAAKK,MAAMjB,EACd6C,IAAKjC,KAAK6B,qB,GA7CjBL,IAAMC,WCG5BS,E,kDACF,WAAY7B,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTa,MAAO,SAHI,E,qDAOVA,GACLnB,KAAKgB,SAAS,CAACG,MAAOA,M,+BAGhB,IAAD,OACDgB,EAAInC,KAAKK,MAAM8B,EACfC,EAAIpC,KAAKK,MAAM+B,EACnB,OACQ,wBAAIb,QAAS,kBAAM,EAAKlB,MAAMgC,UAAUF,EAAGC,IACvClB,MAAO,CAACoB,OAAQ,UAAWC,gBAAiBvC,KAAKM,MAAMa,QAD3D,IAEGnB,KAAKK,MAAMmC,MAFd,S,GAhBGhB,IAAMC,WA+HVgB,E,kDAvGX,WAAYpC,GAAQ,IAAD,8BACf,cAAMA,IACDb,GAAKN,EAAI,EAAKmB,MAAMlB,EAAG,EAAKkB,MAAMjB,GACvC,EAAKiD,UAAY,EAAKA,UAAUzB,KAAf,gBACjB,EAAKN,MAAQ,CACToC,MAAO,GACPC,KAAM,IAEV,EAAKC,cAAgBpB,IAAMM,YARZ,E,gEAYf9B,KAAK6C,kBAAkB7C,KAAKR,M,wCAGdA,GAGd,IAFA,IAAIH,EAAIG,EAAGF,OAAQC,EAAIC,EAAG,GAAGF,OACzBqD,EAAO,IAAIlD,MAAMJ,GACZK,EAAI,EAAGA,EAAIL,IAAKK,EAAG,CAExB,IADA,IAAIoD,EAAM,IAAIrD,MAAMF,GACXI,EAAI,EAAGA,EAAIJ,IAAKI,EACrBmD,EAAInD,GAAK6B,IAAMM,YAEnBa,EAAKjD,GAAKoD,EAId,IADA,IAAIC,EAAM,IAAItD,MAAMJ,GACXK,EAAI,EAAGA,EAAIL,IAAKK,EAAG,CAExB,IADA,IAAIoD,EAAM,IAAIrD,MAAMF,GACXI,EAAI,EAAGA,EAAIJ,IAAKI,EACrBmD,EAAInD,GAAK,kBAAC,EAAD,CAAMwC,EAAGzC,EAAG0C,EAAGzC,EAAGsC,IAAKU,EAAKjD,GAAGC,GAC9B0C,UAAWrC,KAAKqC,UAAWG,MAAOhD,EAAGE,GAAGC,KAEtDoD,EAAIrD,GAAKoD,EAGb9C,KAAKgB,SAAS,CAAC2B,KAAMA,IACrB3C,KAAKgB,SAAS,CAAC0B,MAAOK,M,wCAGP,IAAD,gBACE/C,KAAKM,MAAMqC,MADb,IACd,2BAAiC,CAAC,IAAD,EAAxBG,EAAwB,sBACbA,GADa,IAC7B,2BAAqB,SACbf,QAAQiB,SAAS,UAFI,gCADnB,iC,gCAQRtD,EAAGC,GACTK,KAAKiD,kBACLjD,KAAKkD,gBAAgBxD,EAAGC,GACxBK,KAAK4C,cAAcb,QAAQoB,WAAWzD,EAAGC,EAAGK,KAAKR,GAAGE,GAAGC,M,sCAG3CD,EAAGC,GACf,IAAIH,EAAKQ,KAAKR,GACVL,EAAIa,KAAKK,MAAMlB,EAAGC,EAAIY,KAAKK,MAAMjB,EACjCe,EAAQ,kBAAMP,KAAKC,IAAIL,EAAGE,EAAE,GAAGC,EAAE,GAAIH,EAAGE,EAAE,GAAGC,GAAIH,EAAGE,GAAGC,EAAE,KACnD,IAAND,GAAiB,IAANC,IACPR,EAAEO,EAAE,KAAON,EAAEO,EAAE,GACfK,KAAKkD,gBAAgBxD,EAAE,EAAGC,EAAE,GAEjB,IAAND,GAAWS,MAAYX,EAAGE,GAAGC,EAAE,GACpCK,KAAKkD,gBAAgBxD,EAAGC,EAAE,GAEf,IAANA,GAAWQ,MAAYX,EAAGE,EAAE,GAAGC,GACpCK,KAAKkD,gBAAgBxD,EAAE,EAAGC,GAG1BK,KAAKkD,gBAAgBxD,EAAE,EAAGC,EAAE,IAGpCK,KAAKM,MAAMqC,KAAKjD,GAAGC,GAAGoC,QAAQiB,SAAS,e,yCAGxBI,GACXpD,KAAKK,MAAMlB,IAAMiE,EAAUjE,GAAKa,KAAKK,MAAMjB,IAAMgE,EAAUhE,IAC3DY,KAAKR,GAAKN,EAAIc,KAAKK,MAAMlB,EAAGa,KAAKK,MAAMjB,GACvCY,KAAK6C,kBAAkB7C,KAAKR,O,+BAKhC,OAAS,6BACD,2BAAO6D,UAAU,uBAAuBnC,MAAO,CAACoC,MAAO,MAAOC,OAAQ,QAE1EvD,KAAKM,MAAMoC,MAAMc,KAAI,SAACV,GACtB,OAAO,4BACNA,OAMG,kBAAC,EAAD,CAAeb,IAAKjC,KAAK4C,cACVzD,EAAGa,KAAKK,MAAMlB,EACdC,EAAGY,KAAKK,MAAMjB,EACdI,GAAIQ,KAAKR,U,GAlGnBgC,IAAMC,W,ICpBrBgC,E,kDACF,WAAYpD,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTnB,EAAG,QACHC,EAAG,QAEP,EAAKsE,OAASlC,IAAMM,YACpB,EAAK6B,OAASnC,IAAMM,YACpB,EAAK8B,YAAc,EAAKA,YAAYhD,KAAjB,gBARJ,E,0DAYfZ,KAAKgB,SAAS,CAAC7B,EAAGa,KAAK0D,OAAO3B,QAAQS,QACtCxC,KAAKgB,SAAS,CAAC5B,EAAGY,KAAK2D,OAAO5B,QAAQS,U,+BAItC,OACQ,yBAAKtB,MAAO,CAAC,QAAW,QACpB,yBAAKA,MAAO,CAAC,gBAAiB,QAC1B,2BAAOe,IAAKjC,KAAK0D,OAAQG,KAAK,OAAOC,YAAY,QACjD5C,MAAO,CAAC,eAAgB,SACxB,2BAAOe,IAAKjC,KAAK2D,OAAQE,KAAK,OAAOC,YAAY,OACjD5C,MAAO,CAAC,eAAgB,SACxB,4BAAQK,QAASvB,KAAK4D,aAAtB,OAEJ,kBAAC,EAAD,CAAQzE,EAAGa,KAAKM,MAAMnB,EAAGC,EAAGY,KAAKM,MAAMlB,S,GA3BxCoC,IAAMC,WAiCVsC,EAvCf,WACE,OACQ,kBAAC,EAAD,OCOUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d804a4ba.chunk.js","sourcesContent":["// interactive dp matrix\n// playback steps\nexport function lev(S, T) {\n    var n = S.length;\n    var m = T.length;\n    var dp = new Array(n+1);\n    for (let i = 0; i <= n; ++i) {\n        dp[i] = new Array(m+1)\n    }\n    lev_helper(S, T, n, m, dp);\n    return dp;\n}\n\n\nfunction lev_helper(S, T, n, m, dp) {\n    for (let i = 0; i <= n; ++i) {\n        dp[i][0] = i;\n    }\n\n    for (let j = 0; j <= m; ++j) {\n        dp[0][j] = j;\n    }\n\n    for (let i = 1; i <= n; ++i) {\n        for (let j = 1; j <= m; ++j) {\n            if (S[i-1] === T[j-1]) {\n                dp[i][j] = dp[i-1][j-1]; // NON\n            }\n            else {\n                dp[i][j] = 1 + Math.min(\n                        dp[i-1][j-1], // SUB\n                        dp[i-1][j], // DEL, UP\n                        dp[i][j-1] // INS, LEFT\n                        );\n            }\n        }\n    }\n}\n\nexport class PlaybackIterator {\n    constructor(S, T, dp, i, j) {\n        this.S = S;\n        this.T = T;\n        this.dp = dp;\n        this.i = i;\n        this.j = j;\n        this.hasNext = true;\n    }\n\n    next() {\n        let i = this.i, j = this.j, dp = this.dp;\n\n        if (!this.hasNext || (i === 0 && j === 0)) {\n            this.hasNext = false;\n            return 'FIN';\n        }\n\n        var action;\n        var mymin = () => Math.min(dp[i-1][j-1], dp[i-1][j], dp[i][j-1]);\n\n        if (this.S[i-1] === this.T[j-1]) {\n            --i;\n            --j;\n            action = 'NON';\n        }\n\n        else if (i === 0 || mymin() === dp[i][j-1]) {\n            --j;\n            action = 'INS';\n        }\n        else if (j === 0 || mymin() === dp[i-1][j]) {\n            --i;\n            action = 'DEL';\n        }\n        else {\n            --i;\n            --j;\n            action = 'SUB';\n        }\n        this.i = i;\n        this.j = j;\n        return action;\n\n    }\n}\n","import React from 'react';\nimport { PlaybackIterator } from './lev.js'\n\nclass PathInspector extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            i: -1,\n            j: -1,\n            pbi: -1,\n            finished: false,\n            actions: [],\n            rS: '',\n        };\n        this.clickNext = this.clickNext.bind(this);\n    }\n\n    clickNext() {\n        let pbi = this.state.pbi;\n        var action = pbi.next();\n        let rS = this.state.rS;\n        let prevS = rS;\n        let i = this.state.i, j = this.state.j;\n        let T = this.props.T;\n        let pretty_action = \"\";\n        if (action === 'INS') {\n            rS = rS.slice(0, i) + T[j-1] + rS.slice(i);\n            this.setState({j: j-1});\n            pretty_action = 'Insert \"' + T[j-1] + '\" ';\n        }\n        else if (action === 'DEL') {\n            pretty_action = 'Delete \"' + rS[i-1] + '\" ';\n            rS = rS.slice(0, i-1) + rS.slice(i);\n            this.setState({i: i-1});\n        }\n        else if (action === 'SUB') {\n            pretty_action = 'Substitute \"' + rS[i-1] + '\" for \"' + T[j-1] + '\" ';\n            rS = rS.slice(0, i-1) + T[j-1] + rS.slice(i);\n            this.setState({i: i-1});\n            this.setState({j: j-1});\n        }\n        else if (action === 'NON') {\n            pretty_action = 'No action needed ';\n            this.setState({i: i-1});\n            this.setState({j: j-1});\n        }\n        else { // FIN\n            pretty_action = 'Finished!';\n            this.setState({finished: true});\n        }\n        this.setState({rS: rS});\n        this.state.actions.push(<li>{pretty_action} to get <label style={{color: 'blue'}}>{rS}</label></li>);\n        if (this.state.actions.length == 4) this.state.actions.shift();\n    }\n\n    updateIterator(i, j) {\n        let S = this.props.S, T = this.props.T, dp = this.props.dp;\n        let rS = S.slice(0, i);\n        this.setState({i: i, j: j, pbi: new PlaybackIterator(S, T, dp, i, j)});\n        this.setState({rS: rS});\n        this.setState({actions:\n                [<li> Start at <label style={{color: 'blue'}}>{rS}</label></li>],\n                finish: false,\n        });\n    }\n\n    render() {\n        if (this.state.pbi == -1) return \"\";\n        let i = this.state.i;\n        let j = this.state.j;\n        // console.log(i, j);\n        return (\n                <div>\n                    <button disabled={this.state.finished} onClick={this.clickNext}>Next</button>\n                    <ul>\n                        {this.state.actions}\n                    </ul>\n                </div>\n               );\n    }\n}\n\nexport default PathInspector;\n","import React from 'react';\nimport PathInspector from './PathInspector.js'\n\nclass CellInspector extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            i: -1,\n            j: -1,\n            val: -1,\n        };\n        this.examinePath = this.examinePath.bind(this);\n        this.pathInspector = React.createRef();\n    }\n\n    updateCell(i, j, val) {\n        this.setState({i: i});\n        this.setState({j: j});\n        this.setState({val: val});\n    }\n\n    examinePath() {\n        this.pathInspector.current.updateIterator(this.state.i, this.state.j);\n    }\n\n    render() {\n        let i = this.state.i, j = this.state.j, val = this.state.val;\n        if (i === -1) return \"\";\n        return (\n                <div>\n                    The minimum edit distance between\n                    &nbsp;\n                    <label style={{color: 'blue'}}>&quot;{this.props.S.slice(0,i)}&quot;</label>\n                    &nbsp;\n                    and\n                    &nbsp;\n                    <label style={{color: 'blue'}}>&quot;{this.props.T.slice(0,j)}&quot;</label>\n                    &nbsp;\n                    is\n                    &nbsp;\n                    <label style={{color: 'red'}}>{val}</label>\n                    &nbsp;\n                    <div>\n                        <button onClick={this.examinePath}> Examine Path </button>\n                    </div>\n                    <PathInspector dp={this.props.dp}\n                                   S={this.props.S}\n                                   T={this.props.T}\n                                   ref={this.pathInspector}/>\n                </div>\n               );\n    }\n}\n\nexport default CellInspector;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { lev } from './lev.js'\nimport CellInspector from './CellInspector.js'\n\n\nclass Cell extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            color: 'white',\n        };\n    }\n\n    setColor(color) {\n        this.setState({color: color});\n    }\n\n    render() {\n        let x = this.props.x;\n        let y = this.props.y;\n        return (\n                <td onClick={() => this.props.cellClick(x, y)}\n                    style={{cursor: 'pointer', backgroundColor: this.state.color}}\n                > {this.props.value} </td>\n               )\n    }\n}\n\nclass Matrix extends React.Component {\n    constructor(props) {\n        super(props);\n        this.dp = lev(this.props.S, this.props.T);\n        this.cellClick = this.cellClick.bind(this);\n        this.state = {\n            cells: [],\n            refs: [],\n        };\n        this.cellInspector = React.createRef();\n    }\n\n    componentDidMount() {\n        this.buildCellsAndRefs(this.dp);\n    }\n\n    buildCellsAndRefs(dp) {\n        let n = dp.length, m = dp[0].length;\n        var refs = new Array(n);\n        for (let i = 0; i < n; ++i) {\n            let row = new Array(m);\n            for (let j = 0; j < m; ++j) {\n                row[j] = React.createRef();\n            }\n            refs[i] = row;\n        }\n\n        var res = new Array(n);\n        for (let i = 0; i < n; ++i) {\n            let row = new Array(m);\n            for (let j = 0; j < m; ++j) {\n                row[j] = <Cell x={i} y={j} ref={refs[i][j]}\n                          cellClick={this.cellClick} value={dp[i][j]} />\n            }\n            res[i] = row;\n        }\n\n        this.setState({refs: refs});\n        this.setState({cells: res});\n    }\n\n    resetCellColors() {\n        for (var row of this.state.refs) {\n            for (var ref of row) {\n                ref.current.setColor('white');\n            }\n        }\n    }\n\n    cellClick(i, j) {\n        this.resetCellColors();\n        this.cellClickHelper(i, j);\n        this.cellInspector.current.updateCell(i, j, this.dp[i][j]);\n    }\n\n    cellClickHelper(i, j) {\n        let dp = this.dp;\n        let S = this.props.S, T = this.props.T;\n        var mymin = () => Math.min(dp[i-1][j-1], dp[i-1][j], dp[i][j-1]);\n        if (i !== 0 || j !== 0) {\n            if (S[i-1] === T[j-1]) {\n                this.cellClickHelper(i-1, j-1);\n            }\n            else if (i === 0 || mymin() === dp[i][j-1]) {\n                this.cellClickHelper(i, j-1);\n            }\n            else if (j === 0 || mymin() === dp[i-1][j]) {\n                this.cellClickHelper(i-1, j);\n            }\n            else {\n                this.cellClickHelper(i-1, j-1);\n            }\n        }\n        this.state.refs[i][j].current.setColor('lightpink');\n    }\n\n    componentDidUpdate(prevProps){\n        if (this.props.S !== prevProps.S || this.props.T !== prevProps.T) {\n            this.dp = lev(this.props.S, this.props.T);\n            this.buildCellsAndRefs(this.dp);\n        }\n    }\n\n    render() {\n        return ( <div>\n                <table className=\"table table-bordered\" style={{width: '50%', height: '25%'}}>\n                {\n            this.state.cells.map((row) => { \n            return <tr>\n            {row}\n            </tr>\n        })\n                }\n                </table>\n\n                <CellInspector ref={this.cellInspector}\n                               S={this.props.S}\n                               T={this.props.T}\n                               dp={this.dp} />\n                </div>\n        )\n    }\n}\n\nexport default Matrix;\n","import React from 'react';\nimport Matrix from './Matrix.js'\n\nfunction App() {\n  return (\n          <Home />\n  );\n}\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            S: 'hello',\n            T: 'hola'\n        }\n        this.input1 = React.createRef();\n        this.input2 = React.createRef();\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.setState({S: this.input1.current.value});\n        this.setState({T: this.input2.current.value});\n    }\n\n    render () {\n        return (\n                <div style={{'padding': '5px'}}>\n                    <div style={{'margin-bottom': '5px'}}>\n                        <input ref={this.input1} type='text' placeholder='hello'\n                        style={{'margin-right': '5px'}}></input>\n                        <input ref={this.input2} type='text' placeholder='hola'\n                        style={{'margin-right': '5px'}}></input>\n                        <button onClick={this.handleClick}>Go</button>\n                    </div>\n                    <Matrix S={this.state.S} T={this.state.T} />\n                </div>\n               );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}